apiVersion: v1
policies:
  - name: emerald_policy
    isDefault: true
    rules:
      - identifier: CUSTOM_WORKLOAD_INCORRECT_DATACLASS_LABELS
        messageOnFailure: "Use only approved dataclass labels (`Low`, `Medium` and `High`)"
      - identifier: CUSTOM_WORKLOAD_INCORRECT_ROUTE_DATACLASS_LABELS
        messageOnFailure: "Use only approved dataclass labels (`dataclass-low`, `dataclass-medium`, `dataclass-high` and `dataclass-public`)"
      - identifier: CUSTOM_WORKLOAD_INCORRECT_NETWORK_POLICIES
        messageOnFailure: "Ensure Network Policies have distinct and clear source and target rules"
      - identifier: CUSTOM_WORKLOAD_INCORRECT_ENVIRONMENT_LABELS
        messageOnFailure: "Use only approved environment labels (`prod`, `test` and `dev`)"
      - identifier: CUSTOM_WORKLOAD_MISSING_LABEL_OWNER_VALUE
        messageOnFailure: "Add a proper owner label to know which person/team to ping when needed"
      - identifier: CUSTOM_WORKLOAD_INVALID_LABELS_VALUE
        messageOnFailure: "All lables values must follow the RFC 1123 hostname standard (https://knowledge.broadcom.com/external/article/49542/restrictions-on-valid-host-names.html)"
      - identifier: INGRESS_INCORRECT_HOST_VALUE_PERMISSIVE
        messageOnFailure: Incorrect value for key `host` - specify host instead of using a wildcard character ("*")
      - identifier: CONTAINERS_MISSING_IMAGE_VALUE_VERSION
        messageOnFailure: Incorrect value for key `image` - specify an image version to avoid unpleasant "version surprises" in the future
      - identifier: DEPLOYMENT_MISSING_LABEL_ENV_VALUE
        messageOnFailure: 'Missing label object `env` - add a proper environment description (e.g. "prod", "test", etc.) to the Deployment config'
      - identifier: CONTAINERS_MISSING_CPU_REQUEST_KEY
        messageOnFailure: Missing property object `requests.cpu` - value should be within the accepted boundaries recommended by the organization
      - identifier: CRONJOB_INVALID_SCHEDULE_VALUE
        messageOnFailure: "Incorrect value for key `schedule` - the (cron) schedule expressions is not valid and therefor, will not work as expected"
      - identifier: WORKLOAD_INCORRECT_RESTARTPOLICY_VALUE_ALWAYS
        messageOnFailure: Incorrect value for key `restartPolicy` - any other value than `Always` is not supported by this resource
      - identifier: CONTAINERS_MISSING_CPU_LIMIT_KEY
        messageOnFailure: Missing property object `limits.cpu` - value should be within the accepted boundaries recommended by the organization
      - identifier: HPA_MISSING_MINREPLICAS_KEY
        messageOnFailure: Missing property object `minReplicas` - the value should be within the accepted boundaries recommended by the organization
      - identifier: SERVICE_INCORRECT_TYPE_VALUE_NODEPORT
        messageOnFailure: Incorrect value for key `type` - `NodePort` will open a port on all nodes where it can be reached by the network external to the cluster
      - identifier: CONTAINERS_INCORRECT_HOSTPID_VALUE_TRUE
        messageOnFailure: Incorrect value for key `hostPID` - running on the host’s PID namespace enables access to sensitive information from processes running outside the container
      - identifier: K8S_DEPRECATED_APIVERSION_1.16
        messageOnFailure: Incorrect value for key `apiVersion` - the version you are trying to use is not supported by the Kubernetes cluster version (>=1.16)
      - identifier: CONTAINERS_INCORRECT_HOSTIPC_VALUE_TRUE
        messageOnFailure: Incorrect value for key `hostIPC` - running on the host’s IPC namespace can be (maliciously) used to interact with other processes running outside the container
      - identifier: HPA_MISSING_MAXREPLICAS_KEY
        messageOnFailure: Missing property object `maxReplicas` - the value should be within the accepted boundaries recommended by the organization
      - identifier: CONTAINERS_MISSING_READINESSPROBE_KEY
        messageOnFailure: Missing property object `readinessProbe` - add a properly configured readinessProbe to notify kubelet your Pods are ready for traffic
      - identifier: CRONJOB_MISSING_STARTINGDEADLINESECOND_KEY
        messageOnFailure: Missing property object `startingDeadlineSeconds` - set a time limit to the cron execution to allow killing it if exceeded
      - identifier: CRONJOB_MISSING_CONCURRENCYPOLICY_KEY
        messageOnFailure: Missing property object `concurrencyPolicy` - the behavior will be more deterministic if jobs won't run concurrently
      - identifier: CONTAINERS_INCORRECT_PRIVILEGED_VALUE_TRUE
        messageOnFailure: Incorrect value for key `privileged` - this mode will allow the container the same access as processes running on the host
      - identifier: K8S_DEPRECATED_APIVERSION_1.17
        messageOnFailure: Incorrect value for key `apiVersion` - the version you are trying to use is not supported by the Kubernetes cluster version (>=1.17)
      - identifier: CONTAINERS_MISSING_MEMORY_REQUEST_KEY
        messageOnFailure: Missing property object `requests.memory` - value should be within the accepted boundaries recommended by the organization
      - identifier: K8S_INCORRECT_KIND_VALUE_POD
        messageOnFailure: Incorrect value for key `kind` - raw pod won't be rescheduled in the event of a node failure
      - identifier: WORKLOAD_INCORRECT_NAMESPACE_VALUE_DEFAULT
        messageOnFailure: Incorrect value for key `namespace` - use an explicit namespace instead of the default one (`default`)
      - identifier: CONTAINERS_INCORRECT_RUNASUSER_VALUE_LOWUID
        messageOnFailure: Incorrect value for key `runAsUser` - value should be above 10000 to reduce the chances the UID is already taken
      - identifier: WORKLOAD_MISSING_LABEL_OWNER_VALUE
        messageOnFailure: Missing label object `owner` - add a proper owner label in order to know which person/team to ping when needed
      - identifier: CONTAINERS_MISSING_LIVENESSPROBE_KEY
        messageOnFailure: Missing property object `livenessProbe` - add a properly configured livenessProbe to catch possible deadlocks
      - identifier: CONTAINERS_MISSING_MEMORY_LIMIT_KEY
        messageOnFailure: Missing property object `limits.memory` - value should be within the accepted boundaries recommended by the organization
      - identifier: CONTAINERS_INCORRECT_HOSTNETWORK_VALUE_TRUE
        messageOnFailure: Incorrect value for key `hostNetwork` - running on the host’s network namespace can allow a compromised container to sniff network traffic
      - identifier: WORKLOAD_INVALID_LABELS_VALUE
        messageOnFailure: Incorrect value for key(s) under `labels` - the vales syntax is not valid so the Kubernetes engine will not accept it
      - identifier: CUSTOM_REPLICA_COUNT_PROD
        messageOnFailure: Production deployments must have at least 2 replicas. Don't relay on a single pod for production. Running 2 or more replicas will increase the availability of the service
      - identifier: ENSURE_IMAGE_PULL_POLICY_SET_TO_ALWAYS
        messageOnFailure: Incorrect Value for `imagePullPolicy` - set `imagePullPolicy` to `Always`
customRules:
  - identifier: CUSTOM_WORKLOAD_INCORRECT_DATACLASS_LABELS
    name: Ensure correct data class labels are used [CUSTOM RULE]
    defaultMessageOnFailure: Use only approved dataclass labels (`Low`, `Medium` and `High`)
    schema:
      if:
        properties:
          kind:
            enum:
              - Deployment
              - DeploymentConfig
              - Kafka
              - Pod
      then:
        properties:
          spec:
            properties:
              template:
                properties:
                  metadata:
                    properties:
                      labels:
                        properties:
                          DataClass:
                            enum:
                              - Low
                              - Medium
                              - High
                        required:
                          - DataClass
                    required:
                      - labels
  - identifier: CUSTOM_WORKLOAD_INCORRECT_ROUTE_DATACLASS_LABELS
    name: Ensure correct data class labels are used for routes [CUSTOM RULE]
    defaultMessageOnFailure: Use only approved dataclass labels (`dataclass-low`, `dataclass-medium`, `dataclass-high` and `dataclass-public`)
    schema:
      if:
        properties:
          kind:
            enum:
              - Route
              - Ingress
      then:
        properties:
          metadata:
            properties:
              annotations:
                properties:
                  aviinfrasetting.ako.vmware.com/name:
                    enum:
                      - dataclass-low
                      - dataclass-medium
                      - dataclass-high
                      - dataclass-public
                required:
                  - aviinfrasetting.ako.vmware.com/name
            required:
              - annotations
  - identifier: CUSTOM_WORKLOAD_INCORRECT_NETWORK_POLICIES
    name: Ensure Network Policies have distinct PodSelector and egress/ingress either a pod or IP block [CUSTOM RULE]
    defaultMessageOnFailure: Network Policies must have assigned PodSelector Matchlabel and ingress/egress property must not be empty
    schema:
      if:
        properties:
          kind:
            enum:
              - NetworkPolicy
      then:
        properties:
          spec:
            properties:
              podSelector:
                required:
                  - matchLabels
              egress:
                type: array
                items:
                  properties:
                    to:
                      type: array
                      items:
                        anyOf:
                          - type: object
                            properties:
                              podSelector:
                                required:
                                  - matchLabels
                          - type: object
                            properties:
                              ipBlock:
                                required:
                                  - cidr
                      minItems: 1
                  required:
                    - to
              ingress:
                type: array
                items:
                  properties:
                    from:
                      type: array
                      items:
                        anyOf:
                          - type: object
                            properties:
                              podSelector:
                                required:
                                  - matchLabels

                          - type: object
                            properties:
                              ipBlock:
                                required:
                                  - cidr
                      minItems: 1
                  required:
                    - from
            required:
              - podSelector
  - identifier: CUSTOM_WORKLOAD_INCORRECT_ENVIRONMENT_LABELS
    name: Ensure correct environment labels are used [CUSTOM RULE]
    defaultMessageOnFailure: Use only approved environment labels (`prod`, `dev` and `test`)
    schema:
      properties:
        metadata:
          properties:
            labels:
              properties:
                environment:
                  enum:
                    - prod
                    - dev
                    - test
              required:
                - environment
          required:
            - labels

  - identifier: CUSTOM_WORKLOAD_MISSING_LABEL_OWNER_VALUE
    name: Ensure workload has a configured `owner` label [CUSTOM RULE]
    defaultMessageOnFailure: Add a proper owner label to know which person/team to ping when needed
    schema:
      properties:
        metadata:
          properties:
            labels:
              required:
                - owner
          required:
            - labels

  - identifier: CUSTOM_WORKLOAD_INVALID_LABELS_VALUE
    name: Ensure workload has valid label values [CUSTOM RULE]
    defaultMessageOnFailure: All lables values must follow the RFC 1123 hostname standard (https://knowledge.broadcom.com/external/article/49542/restrictions-on-valid-host-names.html)
    schema:
      properties:
        metadata:
          properties:
            labels:
              patternProperties:
                ^.*$:
                  format: hostname
              additionalProperties: false

  - identifier: CUSTOM_REPLICA_COUNT_PROD
    name: Ensure at least 2 replicas for production deployments [CUSTOM RULE]
    defaultMessageOnFailure: Production deployments must have at least 2 replicas
    schema:
      if:
        properties:
          kind:
            enum:
              - Deployment
              - DeploymentConfig
              - StatefulSet
      then:
        if:
          properties:
            metadata:
              properties:
                labels:
                  properties:
                    environment:
                      const: prod
        then:
          properties:
            spec:
              properties:
                replicas:
                  minimum: 2
          required:
            - spec
            - metadata
      required:
        - kind

  - identifier: ENSURE_IMAGE_PULL_POLICY_SET_TO_ALWAYS
    name: Ensure imagePullPolicy is always set to Always
    defaultMessageOnFailure: Incorrect Value for `imagePullPolicy` - set `imagePullPolicy` to `Always`
    schema:
      definitions:
        imagePullPattern:
          properties:
            spec:
              properties:
                containers:
                  type: array
                  items:
                    properties:
                      imagePullPolicy:
                        type: string
                        enum:
                          - Always
      allOf:
        - $ref: "#/definitions/imagePullPattern"
      additionalProperties:
        $ref: "#"
      items:
        $ref: "#"
